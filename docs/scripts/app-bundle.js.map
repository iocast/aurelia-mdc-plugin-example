{"version":3,"sources":["src/app.js","src/environment.js","src/landing.js","src/main.js","src/router-config.js","src/routes.js","src/components/autocomplete.js","src/components/chip.js","src/components/datepicker.js","src/components/index.js","src/components/overview.js","src/components/routes.js","src/components/tab-bar.js","src/components/timepicker.js","src/resources/index.js","src/resources/elements/au-code.js","src/resources/elements/code-tabs.js"],"names":["App","router","appRouterConfig","i18n","signaler","eventAggregator","languages","value","text","selectedLanguage","ea","activate","params","routeConfig","navigationInstruction","configure","attached","mdcMenu","MDCSimpleMenu","languageMenu","switchLanguage","lang","Promise","oldLocale","getLocale","setLocale","publish","newLocale","toggleLanguageMenu","open","toggleDrawer","drawer","MDCTemporaryDrawer","navigateTo","url","getDefaultFoundation","adapter_","notifyClose","navigate","force","replace","trigger","debug","testing","Landing","Intl","DateTimeFormat","prototype","IntlPolyfill","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","instance","aliases","configureAliases","i18next","setup","backend","loadPath","attributes","lng","fallbackLng","start","then","setRoot","config","map","fallbackRoute","routes","route","name","moduleId","moduleName","nav","title","countries","JSON","parse","Object","freeze","Autocomplete","defaultBindingMode","oneWay","selectedCountry","id","description","onChangeLookupEvent","newValue","oldValue","resolve","reject","filter","ele","code","toLowerCase","includes","filteredList","onSelectionEvent","item","Chip","Datepicker","today","Date","subscribe","IdeasIndex","configureRouter","Overview","exports","TabBar","demoTabBar","MDCTabBar","tabs","forEach","tab","preventDefaultOnClick","listen","detail","updateTab","activeTabIndex","idx","activePanel","demoPanels","querySelector","classList","remove","newActivePanel","add","Timepicker","globalResources","Prism","AuCode","compiler","resources","element","instruction","parseCode","Element","targetInstruction","html","behaviorInstructions","firstChild","removeChild","pre","document","createElement","style","overflow","appendChild","innerHTML","highlight","language","dedent","decodeHtml","txt","str","match","indent","Math","min","apply","el","length","re","RegExp","CodeTabs","codeTabBar","codePanels"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject, bindable, bindingMode } from 'aurelia-framework';\nimport { I18N } from 'aurelia-i18n';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { Router } from 'aurelia-router';\nimport { menu } from 'material-components-web';\n\nimport AppRouterConfig from './router-config';\n\n@inject(Router, AppRouterConfig, I18N, BindingSignaler, EventAggregator)\nexport class App {\n\n    languages = [{\n            value: 'en',\n            text: 'English'\n        },\n        {\n            value: 'de',\n            text: 'Deutsch'\n        }\n    ];\n    selectedLanguage = 'en';\n    languageMenu;\n\n\n    constructor(router, appRouterConfig, i18n, signaler, eventAggregator) {\n        this.router = router;\n        // The application's configuration, including the route definitions that we've declared in router-config.js\n        this.appRouterConfig = appRouterConfig;\n\n        this.i18n = i18n;\n        this.signaler = signaler;\n        this.ea = eventAggregator;\n    }\n\n    activate(params, routeConfig, navigationInstruction) {\n        // Here, we run the configuration when the app loads.\n        this.appRouterConfig.configure();\n    }\n\n    attached() {\n        this.mdcMenu = new menu.MDCSimpleMenu(this.languageMenu);\n    }\n    \n    switchLanguage(lang) {\n      this.selectedLanguage = lang;\n\n      return new Promise( resolve => {\n        let oldLocale = this.i18n.getLocale();\n        this.i18n.setLocale(this.selectedLanguage);\n\n        this.ea.publish('i18n:locale:changed', {\n          oldLocale: oldLocale,\n          newLocale: this.selectedLanguage\n        });\n      });\n    }\n\n    toggleLanguageMenu() {\n      this.mdcMenu.open = !this.mdcMenu.open;\n    }\n\n    toggleDrawer() {\n        this.drawer.MDCTemporaryDrawer.open = !this.drawer.MDCTemporaryDrawer.open;\n    }\n\n    navigateTo(url) {\n        this.drawer.MDCTemporaryDrawer.open = false;\n        this.drawer.MDCTemporaryDrawer.getDefaultFoundation().adapter_.notifyClose();\n        this.router.navigate(url, { force: true, replace: true, trigger: true });\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","export class Landing {\n    \n}\n","import { I18N, TCustomAttribute } from 'aurelia-i18n';\nimport Backend from 'i18next-xhr-backend';\nimport environment from './environment';\n\n/****************\n * Polyfills\n ****************/\nimport 'intl';\nif (!('formatToParts' in Intl.DateTimeFormat.prototype)) {\n    Intl = IntlPolyfill;\n}\n\nexport function configure(aurelia) {\n    aurelia.use\n        .standardConfiguration()\n        .feature('resources');\n\n    if (environment.debug) {\n        aurelia.use.developmentLogging();\n    }\n\n    if (environment.testing) {\n        aurelia.use.plugin('aurelia-testing');\n    }\n\n    aurelia.use\n        .plugin('aurelia-i18n', (instance) => {\n            let aliases = ['t', 'i18n'];\n            // add aliases for 't' attribute\n            TCustomAttribute.configureAliases(aliases);\n\n            // register backend plugin\n            instance.i18next.use(Backend);\n\n            // adapt options to your needs (see http://i18next.com/docs/options/)\n            // make sure to return the promise of the setup method, in order to guarantee proper loading\n            return instance.setup({\n                backend: { // <-- configure backend settings\n                    loadPath: './locales/{{lng}}/{{ns}}.json', // <-- XHR settings for where to get the files from\n                },\n                attributes: aliases,\n                lng: 'de',\n                fallbackLng: 'en',\n                debug: false\n            });\n        });\n\n    aurelia.use.plugin('@iocast/aurelia-mdc-plugin');\n\n    aurelia.start().then(() => aurelia.setRoot());\n}\n","import { PLATFORM } from 'aurelia-pal';\nimport { inject } from 'aurelia-framework';\nimport { Router, Redirect } from 'aurelia-router';\n\nimport { routes } from './routes';\n\n@inject(Router)\nexport default class {\n\n  constructor(router) {\n    this.router = router;\n  }\n\n  configure() {\n    var appRouterConfig = function(config) {\n      //config.title = 'Challenge Plattform';\n\n      config.map([\n        ...routes\n      ]);\n      /*\n      config.mapUnknownRoutes(instruction => {\n        return {\n          route: '404',\n          name: 'not-found',\n          moduleId: PLATFORM.moduleName('errors/not-found')\n        };\n      });\n      */\n\n      config.fallbackRoute('');\n    };\n\n    this.router.configure(appRouterConfig);\n  }\n\n}\n","import { PLATFORM } from 'aurelia-pal';\n\nexport let routes = [{\n        route: ['', 'welcome', 'home', 'index'],\n        name: 'landing',\n        moduleId: PLATFORM.moduleName('./landing'),\n        nav: false,\n        title: 'Welcome'\n    },\n    {\n        route: 'components',\n        name: 'components',\n        moduleId: PLATFORM.moduleName('./components/index'),\n        nav: false,\n        title: 'Components'\n    }\n];\n","import { bindable, bindingMode } from 'aurelia-framework';\n\nimport countriesJSON from 'text!../countries.json';\nconst countries = JSON.parse(countriesJSON);\nObject.freeze(countries);\n\n\nexport class Autocomplete {\n    @bindable({ defaultBindingMode: bindingMode.oneWay }) filteredList;\n\n    constructor() {\n        this.selectedCountry = {\n            id: \"\",\n            description: \"\"\n        }\n    }\n\n    async onChangeLookupEvent(newValue, oldValue) {\n        this.filteredList = await new Promise((resolve, reject) => {\n            resolve(countries.filter(ele => {\n                return (ele.code.toLowerCase().includes(newValue.toLowerCase()) || ele.name.toLowerCase().includes(newValue.toLowerCase()));\n            }));\n        });\n    }\n\n    async onSelectionEvent(item) {\n        this.selectedCountry = item;\n    }\n\n}\n","export class Chip {\r\n\r\n}\r\n","import { inject, computedFrom } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { I18N } from 'aurelia-i18n';\n\n@inject(I18N, EventAggregator)\nexport class Datepicker {\n    today = new Date();\n\n    constructor(i18n, eventAggregator) {\n        this.i18n = i18n;\n        this.ea = eventAggregator;\n\n        this.ea.subscribe('i18n:locale:changed', payload => {});\n    }\n\n\n    @computedFrom(\"i18n.i18next.language\")\n    get locale() {\n        return this.i18n.getLocale();\n    }\n}\n","import { routes } from './routes';\n\nexport class IdeasIndex {\n\n    router;\n\n    configureRouter(config, router) {\n        config.map([\n            ...routes\n        ]);\n    }\n\n}\n","export class Overview {\n    \n}\n","import { PLATFORM } from 'aurelia-pal';\n\nexports.routes = [\n  {\n    route: ['', '/'],\n    name: 'overview',\n    moduleId: PLATFORM.moduleName('./overview'),\n    nav: false,\n    title: \"overview\"\n  },\n  {\n    route: 'chip',\n    name: 'chip',\n    moduleId: PLATFORM.moduleName('./chip'),\n    nav: false,\n    title: 'mdc-chip'\n  },\n  {\n    route: 'autocomplete',\n    name: 'autocomplete',\n    moduleId: PLATFORM.moduleName('./autocomplete'),\n    nav: false,\n    title: 'mdc-autocomplete'\n  },\n  {\n    route: 'datepicker',\n    name: 'datepicker',\n    moduleId: PLATFORM.moduleName('./datepicker'),\n    nav: false,\n    title: 'mdc-datepicker'\n  },\n  {\n    route: 'timepicker',\n    name: 'timepicker',\n    moduleId: PLATFORM.moduleName('./timepicker'),\n    nav: false,\n    title: 'mdc-timepicker'\n  },\n  {\n    route: 'tab-bar',\n    name: 'tab-bar',\n    moduleId: PLATFORM.moduleName('./tab-bar'),\n    nav: false,\n    title: 'mdc-tab-bar'\n  }\n];\n","import { tabs } from 'material-components-web'\n\nexport class TabBar {\n\n    attached() {\n        this.demoTabBar.MDCTabBar.tabs.forEach((tab) => {\n            tab.preventDefaultOnClick = true;\n        });\n\n        this.demoTabBar.MDCTabBar.listen('MDCTabBar:change', ({ detail: tabs }) => {\n            this.updateTab(tabs.activeTabIndex);\n        });\n    }\n\n    updateTab(idx) {\n        let activePanel = this.demoPanels.querySelector(\".tab-panel.is-active\");\n        if (activePanel) activePanel.classList.remove(\"is-active\");\n        let newActivePanel = this.demoPanels.querySelector(\n            \".tab-panel:nth-child(\" + (idx + 1) + \")\"\n        );\n        if (newActivePanel) newActivePanel.classList.add(\"is-active\");\n    }\n\n}\n","import { inject, computedFrom } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { I18N } from 'aurelia-i18n';\n\n@inject(I18N, EventAggregator)\nexport class Timepicker {\n    today = new Date();\n\n    constructor(i18n, eventAggregator) {\n        this.i18n = i18n;\n        this.ea = eventAggregator;\n\n        this.ea.subscribe('i18n:locale:changed', payload => {});\n    }\n\n\n    @computedFrom(\"i18n.i18next.language\")\n    get locale() {\n        return this.i18n.getLocale();\n    }\n}\n","import { PLATFORM } from 'aurelia-pal';\n\nexport function configure(config) {\n    config.globalResources([\n        PLATFORM.moduleName('./elements/au-code'),\n        PLATFORM.moduleName('./elements/code-tabs')\n    ]);\n}\n","import { inject, bindable, noView, customElement, processContent, TargetInstruction } from 'aurelia-framework';\n\nimport * as Prism from 'prismjs';\n\n@processContent((compiler, resources, element, instruction) => {\n    parseCode(element, resources, instruction);\n    return true;\n})\n@customElement('au-code')\n@noView(['prismjs/themes/prism.css'])\n@inject(Element, TargetInstruction)\nexport class AuCode {\n\n    @bindable language;\n\n    constructor(element, targetInstruction) {\n        this.element = element;\n        this.html = targetInstruction.behaviorInstructions[0].html;\n    }\n\n    attached() {\n        while (this.element.firstChild) {\n            this.element.removeChild(this.element.firstChild);\n        }\n        let pre = document.createElement('pre');\n        pre.style.overflow = 'auto';\n        this.element.appendChild(pre);\n        pre.innerHTML = Prism.highlight(this.html, Prism.languages[this.language]);\n    }\n}\n\n\nfunction parseCode(element, resources, instruction) {\n    instruction.html = dedent(decodeHtml(element.innerHTML));\n}\n\nfunction decodeHtml(html) {\n    let txt = document.createElement('textarea');\n    txt.innerHTML = html;\n    return txt.value;\n}\n\nfunction dedent(str) {\n    let match = str.match(/^[ \\t]*(?=\\S)/gm);\n    if (!match) return str;\n\n    let indent = Math.min.apply(Math, match.map(function(el) {\n        return el.length;\n    }));\n\n    let re = new RegExp('^[ \\\\t]{' + indent + '}', 'gm');\n    return indent > 0 ? str.replace(re, '') : str;\n}\n","import { tabs } from 'material-components-web'\n\nexport class CodeTabs {\n\n    attached() {\n        this.codeTabBar.MDCTabBar.tabs.forEach((tab) => {\n            tab.preventDefaultOnClick = true;\n        });\n\n        this.codeTabBar.MDCTabBar.listen('MDCTabBar:change', ({ detail: tabs }) => {\n            this.updateTab(tabs.activeTabIndex);\n        });\n    }\n\n    updateTab(idx) {\n        let activePanel = this.codePanels.querySelector(\".code-tab-panel.is-active\");\n        if (activePanel) activePanel.classList.remove(\"is-active\");\n        let newActivePanel = this.codePanels.querySelector(\n            \".code-tab-panel:nth-child(\" + (idx + 1) + \")\"\n        );\n        if (newActivePanel) newActivePanel.classList.add(\"is-active\");\n\n    }\n\n}\n"],"sourceRoot":"../.."}